# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2018-01-08 19:40
from __future__ import unicode_literals

import catalogue.models
from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('producteurs', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Allergie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=160, verbose_name="Nom de l'allergie")),
                ('slug', models.CharField(max_length=160)),
                ('active', models.BooleanField(verbose_name='Actif / Inactif')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de mise à jour')),
            ],
            options={
                'verbose_name': 'Allergie',
                'verbose_name_plural': 'Allergies',
                'ordering': ['nom', 'timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=160, verbose_name="Nom de l'article")),
                ('slug', models.CharField(max_length=160)),
                ('image', models.ImageField(upload_to=catalogue.models.upload_location_articles)),
                ('disponible', models.BooleanField(verbose_name='Disponible / Non disponible')),
                ('article_composer', models.BooleanField(verbose_name='Article servant à composer un plat (cocher si oui)')),
                ('gluten_info', models.BooleanField(verbose_name='Contient du Gluten: Oui (cocher) / Non (ne pas cocher)')),
                ('vegeterien_info', models.BooleanField(verbose_name='Végéterien friendly: Oui (cocher) / Non (ne pas cocher)')),
                ('type_plat_info', models.BooleanField(verbose_name='Se consomme chaud (cocher) / froid (ne pas cocher)')),
                ('ingredients', models.TextField()),
                ('prix_unitaire', models.DecimalField(decimal_places=2, max_digits=19, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('taux_TVA', models.CharField(max_length=160)),
                ('description', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de mise à jour')),
                ('allergenes', models.ManyToManyField(blank=True, to='catalogue.Allergie')),
            ],
            options={
                'verbose_name': 'Article',
                'verbose_name_plural': 'Articles',
                'ordering': ['nom', 'timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Categories_Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=160, unique=True, verbose_name='Nom de la catégorie')),
                ('slug', models.CharField(max_length=160)),
                ('ordre', models.IntegerField(default=catalogue.models.get_latest_ordre, unique=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Ordre des rubriques dans le menu')),
                ('actif', models.BooleanField(verbose_name='Actif / Inactif')),
                ('presentation_categorie', models.CharField(max_length=160)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de mise à jour')),
            ],
            options={
                'verbose_name': 'Catégorie Générale',
                'verbose_name_plural': 'Catégories Générales',
            },
        ),
        migrations.CreateModel(
            name='Sous_Categories_Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=160, verbose_name='Nom de la sous-catégorie')),
                ('slug', models.CharField(max_length=160)),
                ('description', models.TextField()),
                ('image', models.ImageField(upload_to=catalogue.models.upload_location_sous_categorie)),
                ('prix_min', models.DecimalField(decimal_places=2, max_digits=19, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name="Prix de l'article le plus bas de la catégorie")),
                ('publier', models.BooleanField(verbose_name='Activer / Désactiver la catégorie')),
                ('plats', models.BooleanField(verbose_name='Est une sous-catégorie (type sandwiches dans la catégorie plat)')),
                ('composer', models.BooleanField(verbose_name='Possibilité de composer (cocher) / impossible de composer (vide)')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de mise à jour')),
                ('categorie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalogue.Categories_Article')),
            ],
            options={
                'verbose_name': 'Sous-Catégorie des articles',
                'verbose_name_plural': 'Sous-Catégories des articles',
                'ordering': ['nom', 'timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Type_Produit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=160, verbose_name='Catégorie du produit')),
                ('slug', models.CharField(max_length=160)),
                ('active', models.BooleanField(verbose_name='Actif / Inactif')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de mise à jour')),
            ],
            options={
                'verbose_name': 'Type du produit',
                'verbose_name_plural': 'Type du produit',
                'ordering': ['nom', 'timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Unite_Produit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=160, verbose_name='Unité du produit')),
                ('slug', models.CharField(max_length=160)),
                ('active', models.BooleanField(verbose_name='Actif / Inactif')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de mise à jour')),
            ],
            options={
                'verbose_name': 'Unité du produit',
                'verbose_name_plural': 'Unité du produit',
                'ordering': ['nom', 'timestamp'],
            },
        ),
        migrations.AddField(
            model_name='article',
            name='categories',
            field=models.ManyToManyField(to='catalogue.Sous_Categories_Article'),
        ),
        migrations.AddField(
            model_name='article',
            name='producteurs',
            field=models.ManyToManyField(blank=True, to='producteurs.Producteurs'),
        ),
        migrations.AddField(
            model_name='article',
            name='sous_categories_articles',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalogue.Type_Produit', verbose_name="Type d'article"),
        ),
        migrations.AddField(
            model_name='article',
            name='unite_produit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalogue.Unite_Produit'),
        ),
    ]
